openapi: 3.0.0
info:
  title: Swaggervpn API with Nmap Scanner
  version: v1.0.0
  description: An API for managing VPN services and running Nmap scans.
servers:
  - url: http://localhost:8080/api
    description: Local development server

components:
  schemas:
    NmapScanRequest:
      type: object
      required:
        - host
      properties:
        host:
          type: string
          description: The target host (IP address or hostname) to scan.
          example: "127.0.0.1"
        options:
          type: string
          description: Nmap command-line options.
          default: "-sV"
          example: "-sV -T4"
    NmapScanResult:
      type: object
      description: Represents the result of an Nmap scan.
      properties:
        scan_args:
          type: string
          description: Nmap command arguments used for the scan.
          example: "nmap -sV -oX - 127.0.0.1"
        start_time:
          type: string
          description: Timestamp of when the scan started.
          example: "Sat Jul 27 10:00:00 2024"
        hosts:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                description: State of the host (e.g., up, down).
                example: "up"
              addresses:
                type: object
                additionalProperties:
                  type: string
                description: Key-value pairs of address types and addresses.
                example:
                  ipv4: "127.0.0.1"
              hostnames:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Hostname.
                      example: "localhost"
                    type:
                      type: string
                      description: Type of hostname record (e.g., user, PTR).
                      example: "PTR"
              ports:
                type: array
                items:
                  type: object
                  properties:
                    protocol:
                      type: string
                      example: "tcp"
                    portid:
                      type: string
                      example: "80"
                    state:
                      type: string
                      example: "open"
                    service_name:
                      type: string
                      nullable: true
                      example: "http"
                    product:
                      type: string
                      nullable: true
                      example: "Apache httpd"
                    version:
                      type: string
                      nullable: true
                      example: "2.4.58"
        error:
          type: string
          description: Error message if the scan failed.
          example: "Nmap execution failed: ..."

paths:
  /nmap/scan:
    post:
      summary: Run an Nmap scan
      description: Executes an Nmap scan against the specified host with given options.
      operationId: runNmapScan
      requestBody:
        description: Nmap scan parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NmapScanRequest'
      responses:
        '200':
          description: Successful Nmap scan result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NmapScanResult'
        '400':
          description: Invalid request parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NmapScanResult' # Using the same schema for error reporting
        '500':
          description: Internal server error or Nmap execution error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NmapScanResult' # Using the same schema for error reporting

# Placeholder for other VPN related paths - to be defined based on actual VPN functionality
# Example:
#  /vpn/connect:
#    post:
#      summary: Connect to VPN
#      description: Establishes a VPN connection.
#      requestBody:
#        description: VPN connection details
#        required: true
#        content:
#          application/json:
#            schema:
#              type: object # Define VPN connection request schema
#              properties:
#                server_id:
#                  type: string
#                credentials:
#                  type: object # Define credentials schema
#      responses:
#        '200':
#          description: VPN connection successful
#        '401':
#          description: Authentication failed
#        '500':
#          description: VPN connection failed
#
#  /vpn/status:
#    get:
#      summary: Get VPN status
#      description: Retrieves the current VPN connection status.
#      responses:
#        '200':
#          description: Current VPN status
#          content:
#            application/json:
#              schema:
#                type: object # Define VPN status response schema
#        '404':
#          description: No active VPN connection
#
#  /vpn/disconnect:
#    post:
#      summary: Disconnect from VPN
#      description: Terminates the current VPN connection.
#      responses:
#        '200':
#          description: VPN disconnection successful
#        '500':
#          description: VPN disconnection failed
#
#  /vpn/servers:
#    get:
#      summary: List available VPN servers
#      description: Retrieves a list of available VPN servers.
#      responses:
#        '200':
#          description: List of VPN servers
#          content:
#            application/json:
#              schema:
#                type: array # Define server list schema
#                items:
#                  type: object # Define server schema
#
# info: and requests: sections from the original Nuclei template have been removed
# as they are not part of a standard OpenAPI specification.
# The original content was for vulnerability scanning, not API definition.
# This new content defines an API with an Nmap scanning endpoint.
# Further VPN-related endpoints would need to be defined based on the
# specific functionalities of the Swaggervpn service.
